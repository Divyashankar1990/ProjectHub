{
	"info": {
		"_postman_id": "8cc3eecd-9154-4c93-a71d-ecc9ccbfb23d",
		"name": "JSONPlaceholder API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16072554",
		"_collection_link": "https://speeding-sunset-506336.postman.co/workspace/User-API-Testing~b45be1c7-c644-4e71-ae85-74cf72a0b28f/collection/16072554-8cc3eecd-9154-4c93-a71d-ecc9ccbfb23d?action=share&source=collection_link&creator=16072554"
	},
	"item": [
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Test if response status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2. Test if response body is not empty\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.be.empty;\r",
							"});\r",
							"\r",
							"// 3. Test if response is JSON\r",
							"pm.test(\"Response is JSON\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// 4. Test if response contains at least 1 post\r",
							"let jsonData = pm.response.json();\r",
							"pm.test(\"At least one post is returned\", function () {\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							"\r",
							"// 5. Test if every post has userId, id, title, and body fields\r",
							"pm.test(\"All posts have userId, id, title, and body\", function () {\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(item).to.have.property(\"userId\");\r",
							"        pm.expect(item).to.have.property(\"id\");\r",
							"        pm.expect(item).to.have.property(\"title\");\r",
							"        pm.expect(item).to.have.property(\"body\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Postman Test\",\r\n  \"body\": \"This is a test post created from Postman\",\r\n  \"userId\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Post",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Delete Post",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}